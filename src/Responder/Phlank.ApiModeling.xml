<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Phlank.Responder</name>
    </assembly>
    <members>
        <member name="T:Phlank.Responder.ResponderResult">
            <summary>
            An action result produced by the <see cref="T:Phlank.Responder.IResponder"/>. This
            object should be returned by any client-facing controller methods in
            your project. This result can hold any one of three forms of content:
            <list type="bullet">
                <item>
                    No content with successful status code.
                </item>
                <item>
                    JSON content (<c>application/json</c>) with a successful status
                    code.
                </item>
                <item>
                    JSON content (<c>application/problem+json</c>) with an
                    unsuccessful status cude.
                </item>
            </list>
            Each of these items will contain at the very least an HTTP status code
            and a response type header.
            </summary>
        </member>
        <member name="T:Phlank.Responder.ResponderResult`1">
            <summary>
            An action result produced by the <see cref="T:Phlank.Responder.IResponder"/>. This
            object should be returned by any client-facing controller methods in
            your project. This result can hold any one of three forms of content:
            <list type="bullet">
                <item>
                    No content with successful status code.
                </item>
                <item>
                    JSON content (<c>application/json</c>) with a successful status
                    code.
                </item>
                <item>
                    JSON content (<c>application/problem+json</c>) with an
                    unsuccessful status cude.
                </item>
            </list>
            Each of these items will contain at the very least an HTTP status code
            and a response type header.
            </summary>
        </member>
        <member name="T:Phlank.Responder.IResponder">
            <summary>
            An instance of IResponder is used to build an <see cref="T:Phlank.Responder.ResponderResult"/>.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddError(Phlank.Responder.ApiError)">
            <summary>
            Adds an error to the <see cref="T:Phlank.Responder.IResponder"/>.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddError(System.Net.HttpStatusCode,System.String,System.String,System.Uri,System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an error from the arguments and adds it to the 
            <see cref="T:Phlank.Responder.IResponder"/>.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddError(System.Int32,System.String,System.String,System.Uri,System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an error from the arguments and adds it to the 
            <see cref="T:Phlank.Responder.IResponder"/>.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddErrors(System.Collections.Generic.IEnumerable{Phlank.Responder.ApiError})">
            <summary>
            Adds errors to the <see cref="T:Phlank.Responder.IResponder"/>.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddProblem(Microsoft.AspNetCore.Mvc.ProblemDetails)">
            <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails">ProblemDetail</see> to the <see cref="T:Phlank.Responder.IResponder"/>
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddProblems(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ProblemDetails})">
            <summary>
            Adds <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> to the <see cref="T:Phlank.Responder.IResponder"/>
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddWarning(Phlank.Responder.Warning)">
            <summary>
            Adds a warning to the <see cref="T:Phlank.Responder.IResponder"/>.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddWarnings(System.Collections.Generic.IEnumerable{Phlank.Responder.Warning})">
            <summary>
            Adds warnings to the <see cref="T:Phlank.Responder.IResponder"/>.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddException``1(``0)">
            <summary>
            Adds an exception to the <see cref="T:Phlank.Responder.IResponder"/> as an error.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddExceptions``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds exceptions to the <see cref="T:Phlank.Responder.IResponder"/> as errors.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddContent(System.Object)">
            <summary>
            Adds content to the <see cref="T:Phlank.Responder.IResponder"/>
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddStatusCodeOnSuccess(System.Net.HttpStatusCode)">
            <summary>
            Adds a status code to return to the <see cref="T:Phlank.Responder.IResponder"/> if the
            operation is successful. Using this method multiple times will
            replace previously added status codes. The default successful
            status code is <see cref="F:System.Net.HttpStatusCode.OK"/>.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.AddStatusCodeOnSuccess(System.Int32)">
            <summary>
            Adds a status code to return to the <see cref="T:Phlank.Responder.IResponder"/> if the
            operation is successful. Using this method multiple times will
            replace previously added status codes. The default successful 
            status code is 200.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">An <see cref="T:System.ArgumentOutOfRangeException"/> may be thrown under two circumstances; first, if the provided <paramref name="statusCode"/> has no corresponding <see cref="T:System.Net.HttpStatusCode"/>, and second, if the provided <paramref name="statusCode"/> has a matching <see cref="T:System.Net.HttpStatusCode"/> but it is an erroring status code.</exception>
        </member>
        <member name="M:Phlank.Responder.IResponder.Build(Microsoft.AspNetCore.Mvc.ControllerBase)">
            <summary>
            Creates a <see cref="T:Phlank.Responder.Response"/> from the provided errors and
            warnings.
            </summary>
        </member>
        <member name="M:Phlank.Responder.IResponder.Build``1(Microsoft.AspNetCore.Mvc.ControllerBase)">
            <summary>
            Creates a <see cref="T:Phlank.Responder.ResponderResult`1"/> from the provided errors
            and warnings.
            </summary>
            <typeparam name="T">The type of the data to return.</typeparam>
        </member>
        <member name="M:Phlank.Responder.Responder.#ctor(Microsoft.Extensions.Options.IOptions{Phlank.Responder.ResponderOptions})">
            <summary>
            Creates an instance of a <see cref="T:Phlank.Responder.Responder"/>.
            </summary>
            <param name="options">The options injected at startup to control the behavior of the <see cref="T:Phlank.Responder.Responder"/></param>
        </member>
        <member name="T:Phlank.Responder.ApiError">
            <summary>
            An error to be reflected by the API. This class follows the
            specification in
            <see href="https://www.rfc-editor.org/rfc/rfc7807.html">RFC7807</see>.
            At minimum, a user should provide values for Status, Title, and Details.
            </summary>
        </member>
        <member name="M:Phlank.Responder.ApiError.#ctor(System.Net.HttpStatusCode,System.String,System.String,System.Uri,System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an <see cref="T:Phlank.Responder.ApiError"/> from the given arguments. 
            <paramref name="status" /> is the only required parameter in most 
            circumstances. If a field is not provided, then the default value
            from a base list of <see cref="T:Phlank.Responder.ApiError">ApiErrors</see> will be 
            used.
            </summary>
            <param name="status">The <see cref="T:System.Net.HttpStatusCode"/> relating to the error.</param>
            <param name="title">The title of the error. If none is provided, a default value will be used.</param>
            <param name="detail">The detail text of the error. If none is provided, a default value will be used.</param>
            <param name="type">The URI type reference of the error. If none is provided, a default value will be used.</param>
            <param name="instance">The instance of the specific context relating to the ApiError. If left blank, this will be provided for by the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> belonging to the <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/>.</param>
            <param name="extensions">Additional information relating to the error that has occured.</param>
            <exception cref="T:System.ArgumentNullException">If no default <see cref="T:Phlank.Responder.ApiError"/> is found matching the provided <paramref name="status"/>, and either <paramref name="title"/> or <paramref name="detail"/> are null, an <see cref="T:System.ArgumentNullException"/> will be thrown.</exception>
        </member>
        <member name="M:Phlank.Responder.ApiError.#ctor(System.Int32,System.String,System.String,System.Uri,System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an <see cref="T:Phlank.Responder.ApiError"/> from the given arguments. 
            <paramref name="status" /> is the only required parameter in most 
            circumstances. If a field is not provided, then the default value
            from a base list of <see cref="T:Phlank.Responder.ApiError">ApiErrors</see> will be 
            used.
            </summary>
            <param name="status">The status code relating to the error.</param>
            <param name="title">The title of the error. If none is provided, a default value will be used.</param>
            <param name="detail">The detail text of the error. If none is provided, a default value will be used.</param>
            <param name="type">The URI type reference of the error. If none is provided, a default value will be used.</param>
            <param name="instance">The instance of the specific context relating to the ApiError. If left blank, this will be provided for by the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> belonging to the <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/>.</param>
            <param name="extensions">Additional information relating to the error that has occured.</param>
            <exception cref="T:System.ArgumentNullException">If no default <see cref="T:Phlank.Responder.ApiError"/> is found matching the provided <paramref name="status"/>, and either <paramref name="title"/> or <paramref name="detail"/> are null, an <see cref="T:System.ArgumentNullException"/> will be thrown.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">An <see cref="T:System.ArgumentOutOfRangeException"/> may be thrown under two circumstances; first, if the provided <paramref name="status"/> has no corresponding <see cref="T:System.Net.HttpStatusCode"/>, and second, if the provided <paramref name="status"/> has a matching <see cref="T:System.Net.HttpStatusCode"/> but it is not a valid erroring status code.</exception>
        </member>
        <member name="P:Phlank.Responder.IApiError.Detail">
            <summary>
            A short, human-readable summary of the problem type. It SHOULD NOT
            change from occurrence to occurrence of the problem, except for 
            purposes of localization (e.g., using proactive content 
            negotiation).
            </summary>
        </member>
        <member name="P:Phlank.Responder.IApiError.Instance">
            <summary>
            A URI reference that identifies the specific occurrence of the 
            problem. It may or may not yield further information if 
            dereferenced.
            </summary>
        </member>
        <member name="P:Phlank.Responder.IApiError.Status">
            <summary>
            The HTTP status code generated by the origin server for this
            occurence of the problem.
            </summary>
        </member>
        <member name="P:Phlank.Responder.IApiError.Title">
            <summary>
            A human-readable explanation specific to this occurrence of the
            problem.
            </summary>
        </member>
        <member name="P:Phlank.Responder.IApiError.Type">
            <summary>
            A URI reference 
            [<see href="https://www.rfc-editor.org/rfc/rfc3986">RFC3986</see>]
            that identifies the problem type. RFC7807 encourages that, when 
            dereferenced, it provide human-readable documentation for the 
            problem type. When this member is not present, its value is assumed
            to be "about:blank".
            </summary>
        </member>
        <member name="P:Phlank.Responder.IApiError.Extensions">
            <summary>
            Additional fields to send to the client.
            </summary>
        </member>
        <member name="T:Phlank.Responder.Response">
            <summary>
            Content model for deserializing responses generated by the <see cref="T:Phlank.Responder.IResponder"/>.
            </summary>
        </member>
        <member name="P:Phlank.Responder.Response.Warnings">
            <summary>
            Warnings regarding the attempted operation.
            </summary>
        </member>
        <member name="P:Phlank.Responder.Response.Data">
            <summary>
            The content to return back to the user as a result of the operation.
            </summary>
        </member>
        <member name="P:Phlank.Responder.Response.Error">
            <summary>
            An error which occured while trying to fulfill the request of the client.
            </summary>
        </member>
        <member name="T:Phlank.Responder.Response`1">
            <summary>
            Content model for deserializing responses generated by the <see cref="T:Phlank.Responder.IResponder"/>.
            </summary>
        </member>
        <member name="P:Phlank.Responder.Response`1.Warnings">
            <summary>
            Warnings regarding the attempted operation.
            </summary>
        </member>
        <member name="P:Phlank.Responder.Response`1.Data">
            <summary>
            The content to return back to the user as a result of the operation.
            </summary>
        </member>
        <member name="P:Phlank.Responder.Response`1.Error">
            <summary>
            An error which occured while trying to fulfill the request of the client.
            </summary>
        </member>
        <member name="T:Phlank.Responder.Severity">
            <summary>
            Represents the level of criticality regarding a warning.
            </summary>
        </member>
        <member name="F:Phlank.Responder.Severity.Critical">
            <summary>
            Imminent failure of the operation.
            </summary>
        </member>
        <member name="F:Phlank.Responder.Severity.High">
            <summary>
            A high level of concern either regarding the operation or its result.
            </summary>
        </member>
        <member name="F:Phlank.Responder.Severity.Low">
            <summary>
            A low level of concern either regarding the operation or its result.
            </summary>
        </member>
        <member name="T:Phlank.Responder.Warning">
            <summary>
            Information to reflect back to the user regarding any dangerous or
            problematic events during operation or issues with the result of the
            operation.
            </summary>
        </member>
        <member name="P:Phlank.Responder.Warning.Severity">
            <summary>
            The severity of the <see cref="T:Phlank.Responder.Warning"/>.
            </summary>
        </member>
        <member name="P:Phlank.Responder.Warning.Message">
            <summary>
            The message of the <see cref="T:Phlank.Responder.Warning"/>.
            </summary>
        </member>
        <member name="P:Phlank.Responder.Warning.Extensions">
            <summary>
            Extension data for the <see cref="T:Phlank.Responder.Warning"/>.
            </summary>
        </member>
        <member name="T:Phlank.Responder.ResponderOptions">
            <summary>
            Options for the behavior of the Responder library..
            </summary>
        </member>
        <member name="F:Phlank.Responder.ResponderOptions.Responder">
            <summary>
            The configuration string for the Responder library.
            </summary>
        </member>
    </members>
</doc>
