using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Net;
using System.Text.Json.Serialization;

namespace Phlank.Responder
{
    internal interface IProblem
    {
        /// <summary>
        /// A short, human-readable summary of the problem type. It SHOULD NOT
        /// change from occurrence to occurrence of the problem, except for 
        /// purposes of localization (e.g., using proactive content 
        /// negotiation).
        /// </summary>
        [JsonProperty(PropertyName = "detail")]
        [JsonPropertyName("detail")]
        public string Detail { get; }

        /// <summary>
        /// A URI reference that identifies the specific occurrence of the 
        /// problem. It may or may not yield further information if 
        /// dereferenced.
        /// </summary>
        [JsonProperty(PropertyName = "detail")]
        [JsonPropertyName("detail")]
        public Uri Instance { get; }

        /// <summary>
        /// The HTTP status code generated by the origin server for this
        /// occurence of the problem.
        /// </summary>
        [JsonProperty(PropertyName = "detail")]
        [JsonPropertyName("detail")]
        public HttpStatusCode Status { get; }

        /// <summary>
        /// A human-readable explanation specific to this occurrence of the
        /// problem.
        /// </summary>
        [JsonProperty(PropertyName = "detail")]
        [JsonPropertyName("detail")]
        public string Title { get; }

        /// <summary>
        /// A URI reference [RFC3986] that identifies the problem type. RFC7807
        /// encourages that, when dereferenced, it provide human-readable 
        /// documentation for the problem type. When this member is not 
        /// present, its value is assumed to be "about:blank".
        /// </summary>
        [JsonProperty(PropertyName = "detail")]
        [JsonPropertyName("detail")]
        public Uri Type { get; }

        /// <summary>
        /// Additional fields to send to the client.
        /// </summary>
        [JsonProperty(PropertyName = "detail")]
        [JsonPropertyName("detail")]
        public IDictionary<string, object> Extensions { get; }
    }
}